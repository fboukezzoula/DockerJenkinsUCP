$jsonContent = @"
{
	"item1": {},
	"dsqds": {},
	"sqdd": {
		"data" : "value"
	},
	"itcxcxem4": {}
}
"@

$jsonObject = ConvertFrom-Json $jsonContent
$items = $jsonObject.Keys




Bien sûr, vous pouvez utiliser PowerShell pour accomplir cela. Voici comment vous pourriez faire pour extraire les noms des éléments "item" de votre fichier JSON et les stocker dans une variable :

```powershell
$jsonContent = @"
{
	"item1": {},
	"item2": {},
	"item3": {
		"data" : "value"
	},
	"item4": {}
}
"@

$jsonObject = ConvertFrom-Json $jsonContent
$items = $jsonObject.PSObject.Properties.Name -match '^item\d+$'
```

Dans cet exemple, nous stockons le contenu JSON dans la variable `$jsonContent`. Ensuite, nous utilisons `ConvertFrom-Json` pour convertir le JSON en un objet PowerShell. Ensuite, nous utilisons la propriété `PSObject.Properties.Name` pour obtenir les noms de toutes les propriétés de l'objet JSON et nous utilisons `-match '^item\d+$'` pour filtrer les noms qui correspondent au motif "item" suivi de chiffres.

Les noms correspondants sont stockés dans la variable `$items`, que vous pouvez utiliser comme vous le souhaitez dans votre script.
