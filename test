auth required pam_script.so umask=0077 path=/path/to/script env=PAM_USER
Cependant, cette configuration peut ne pas fonctionner si l'utilisateur n'existe pas. Dans ce cas, le script ne sera pas exécuté et l'utilisateur ne sera pas authentifié.

Vous pouvez essayer d'ajouter une condition au script pour vérifier si l'utilisateur existe. Si l'utilisateur n'existe pas, le script peut créer l'utilisateur et ensuite s'exécuter.

Voici un exemple de script avec une condition pour vérifier si l'utilisateur existe :

Bash
#!/bin/bash

username=$PAM_USER

# Vérifie si l'utilisateur existe
if ! id -u $username > /dev/null 2>&1; then
    # L'utilisateur n'existe pas, on le crée
    useradd -m -d /home/$username -s /bin/bash $username
fi

# Exécute le script
echo "Le nom d'utilisateur est $PAM_USER"







D'accord, cela suggère que le problème est lié à la configuration du module pam_script.

Vous pouvez essayer de modifier la configuration du module pam_script pour voir si vous pouvez résoudre le problème.

Voici quelques modifications que vous pouvez essayer :

Changez l'option env=PAM_USER en env=PAM_USER,PAM_TYPE. Cela permettra à la fois les variables d'environnement PAM_USER et PAM_TYPE d'être passées au script.
Changez l'option env=PAM_USER en env=.*. Cela permettra à tous les environnements d'exécution de l'authentification d'être passés au script.
Changez la ligne de configuration du module pam_script en auth required pam_script.so umask=0077 path=/path/to/script env=PAM_USER. Cela permettra de passer la variable d'environnement PAM_USER au script, même si la variable n'est pas définie par défaut.
Si vous changez la configuration du module pam_script, vous devez redémarrer le service SSH pour que les modifications prennent effet.

J'espère que cela vous aidera à résoudre le problème.

Si vous avez d'autres questions ou problèmes, n'hésitez pas à me les poser.






D'accord, voici quelques vérifications que vous pouvez effectuer pour résoudre ce problème :

Assurez-vous que le script est exécutable. Vous pouvez utiliser la commande chmod +x /path/to/script pour le rendre exécutable.
Assurez-vous que le script est dans le répertoire /etc/pam.d.
Assurez-vous que le script ne contient pas d'erreurs. Vous pouvez utiliser la commande sh /path/to/script pour exécuter le script manuellement et voir si vous obtenez des erreurs.
Si vous avez effectué toutes ces vérifications et que vous rencontrez toujours le problème, vous pouvez essayer de passer la variable d'environnement PAM_USER manuellement à votre script. Vous pouvez faire cela en ajoutant la ligne suivante à votre script :

export PAM_USER=$username
Où username est le nom d'utilisateur que vous souhaitez créer.

Voici un exemple de script qui passe la variable d'environnement PAM_USER manuellement :

Bash
#!/bin/bash

export PAM_USER=$username

useradd -m -d /home/$username -s /bin/bash $username
passwd $username
Use code with caution. Learn more
Ce script est équivalent au script utilisé pour configurer le module pam_exec, mais il passe la variable d'environnement PAM_USER manuellement.

Si vous passez la variable d'environnement PAM_USER manuellement et que vous pouvez créer l'utilisateur, cela signifie que le problème vient de la configuration du module pam_script. Vous pouvez essayer de modifier la configuration du module pour voir si vous pouvez résoudre le problème.

Voici quelques modifications que vous pouvez essayer :

Changez l'option env=PAM_USER en env=.*. Cela permettra à tous les environnements d'exécution de l'authentification d'être passés au script.
Changez l'option env=PAM_USER en env=PAM_USER,PAM_AUTHTOK. Cela permettra à la fois les variables d'environnement PAM_USER et PAM_AUTHTOK d'être passées au script.
J'espère que cela vous aidera à résoudre le problème.






Vous avez raison, la variable d'environnement PAM_USER n'est pas passée par défaut par le module pam_script. Pour la passer, vous devez ajouter l'option env=PAM_USER à la ligne de configuration du module dans le fichier /etc/pam.d/sshd.

Voici la configuration modifiée :

auth required pam_script.so umask=0077 env=PAM_USER path=/path/to/script
Une fois que vous avez modifié la configuration, vous devez redémarrer le service SSH.

sudo systemctl restart sshd
Maintenant, la variable d'environnement PAM_USER sera passée au script et vous pourrez utiliser cette variable pour créer l'utilisateur.

Voici un exemple de script qui utilise la variable d'environnement PAM_USER :

Bash
#!/bin/bash

username=$PAM_USER
password=$PAM_AUTHTOK

useradd -m -d /home/$username -s /bin/bash $username
passwd $username
Use code with caution. Learn more
Ce script est équivalent au script utilisé pour configurer le module pam_exec, mais il utilise la variable d'environnement PAM_USER pour obtenir le nom d'utilisateur.

Voici les étapes détaillées pour configurer la création automatique d'un utilisateur lors de sa connexion SSH avec authentification par clé SSH sous Linux CentOS 7 ou RHEL 8 en utilisant le module pam_script et la variable d'environnement PAM_USER :

Créez un script qui créera l'utilisateur.

Modifiez le fichier /etc/pam.d/sshd et ajoutez la ligne auth required pam_script.so umask=0077 env=PAM_USER path=/path/to/script.

Redémarrez le service SSH.

Testez votre configuration en vous connectant au serveur SSH avec un utilisateur qui n'existe pas encore.

ssh foo@localhost
Si la configuration est correcte, vous devriez pouvoir vous connecter au serveur SSH avec votre clé SSH






*










Alternative

Si vous ne souhaitez pas créer un script, vous pouvez utiliser le module pam_script. Ce module permet d'exécuter un script pour créer un utilisateur, mais il est plus flexible que pam_exec.

Pour configurer le module pam_script, vous devez modifier le fichier /etc/pam.d/sshd et ajouter la ligne suivante :

auth required pam_script.so umask=0077 path=/path/to/script
Où /path/to/script est le chemin d'accès au script qui créera l'utilisateur.

Le script aura accès à l'environnement d'exécution de l'authentification, y compris les variables suivantes :

PAM_USER : le nom d'utilisateur
PAM_AUTHTOK : le mot de passe
Vous pouvez utiliser ces variables pour créer l'utilisateur.

Par exemple, le script suivant créera un utilisateur nommé foo avec le mot de passe bar :

Bash
#!/bin/bash

username=$PAM_USER
password=$PAM_AUTHTOK

useradd -m -d /home/$username -s /bin/bash $username
passwd $username
Use code with caution. Learn more
Ce script est équivalent au script utilisé pour configurer le module pam_exec.




auth       required     pam_sepermit.so
auth       substack     password-auth
auth       include      postlogin
auth       optional     pam_script.so /etc/pam-script.d/create_user




Créez un script externe pour définir la variable PAM_USER. Par exemple, créez un fichier /usr/local/bin/set_pam_user.sh avec le contenu suivant :
bash
Copy code
#!/bin/bash
echo "PAM_USER=$PAM_USER" >> /tmp/pam_user.log
exit 0
Assurez-vous que ce script est exécutable :

bash
Copy code
chmod +x /usr/local/bin/set_pam_user.sh
Modifiez votre fichier /etc/pam.d/sshd pour appeler ce script externe :
plaintext
Copy code
auth       required     pam_sepermit.so
auth       substack     password-auth
auth       include      postlogin
auth       required     pam_exec.so /usr/local/bin/set_pam_user.sh
auth       optional     pam_script.so
Redémarrez le service SSH :
bash
Copy code
sudo systemctl restart sshd
Testez à nouveau la connexion SSH et vérifiez le contenu du fichier /tmp/pam_user.log pour voir si la variable PAM_USER est correctement définie.
Cette approche utilise un script externe pour définir la variable PAM_USER, contournant ainsi le problème potentiel du module pam_exec directement dans le fichier PAM. Assurez-vous que le script est correctement exécutable et que le chemin vers le script dans le fichier PAM est correct.








Pour créer automatiquement un utilisateur avec son répertoire personnel lors de la connexion SSH, vous pouvez utiliser PAM (Pluggable Authentication Module) avec les rpms pam_script sous CentOS/RHEL. Vous avez déjà la bonne idée en ajoutant la directive "auth optional /usr/lib64/security/pam_script.so" et en créant un script dans le répertoire /etc/pam-script.d. Voici les étapes pour le faire :

Assurez-vous d'installer les paquets nécessaires si ce n'est pas déjà fait :

Copy code
sudo yum install pam_script
Créez un script PAM pour créer l'utilisateur et son répertoire personnel. Par exemple, créez un fichier dans /etc/pam-script.d, par exemple /etc/pam-script.d/create_user, avec le contenu suivant :

bash
Copy code
#!/bin/bash

# Récupérer le nom d'utilisateur de l'environnement
USERNAME="$PAM_USER"

# Vérifier si l'utilisateur existe
if id "$USERNAME" &>/dev/null; then
    # L'utilisateur existe déjà
    exit 0
else
    # Créer l'utilisateur avec son répertoire personnel
    useradd -m "$USERNAME"
    exit 0
fi
Assurez-vous que le script est exécutable avec la commande :

bash
Copy code
sudo chmod +x /etc/pam-script.d/create_user
Modifiez votre configuration PAM pour SSH. Ouvrez le fichier /etc/pam.d/sshd avec un éditeur de texte (en utilisant sudo) et ajoutez la ligne suivante à la fin de la section "auth":

bash
Copy code
auth optional /usr/lib64/security/pam_script.so
Assurez-vous que le fichier /etc/pam.d/sshd ressemble à ceci :

text
Copy code
# /etc/pam.d/sshd
auth       required     pam_sepermit.so
auth       substack     password-auth
auth       include      postlogin
auth optional /usr/lib64/security/pam_script.so
Assurez-vous que votre serveur SSH est configuré pour autoriser l'authentification par clé SSH.

Testez votre configuration en vous déconnectant du serveur SSH (si vous êtes déjà connecté) et en vous reconnectant. Lorsque l'utilisateur se connectera via SSH, le script PAM vérifiera s'il existe déjà et le créera si nécessaire.

Veuillez noter que cette méthode est basée sur PAM et peut nécessiter des ajustements en fonction de votre configuration spécifique. Assurez-vous de prendre des précautions de sécurité appropriées, car la création automatique d'utilisateurs peut présenter des risques potentiels.
